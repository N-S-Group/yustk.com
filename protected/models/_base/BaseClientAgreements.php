<?php

/**
 * This is the model base class for the table "client_agreements".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ClientAgreements".
 *
 * Columns in table "client_agreements" available as properties of the model,
 * followed by relations of table "client_agreements" available as properties of the model.
 *
 * @property integer $id
 * @property integer $client_id
 * @property string $number
 * @property string $date
 * @property string $name
 * @property integer $delete
 *
 * @property Clients $client
 * @property Orders[] $orders
 */
abstract class BaseClientAgreements extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'client_agreements';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'ClientAgreements|ClientAgreements', $n);
	}

	public static function representingColumn() {
		return 'number';
	}

	public function rules() {
		return array(
			array('client_id, number, date, name', 'required'),
			array('client_id, delete', 'numerical', 'integerOnly'=>true),
			array('number', 'length', 'max'=>25),
			array('delete', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, client_id, number, date, name, delete', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'client' => array(self::BELONGS_TO, 'Clients', 'client_id'),
			'orders' => array(self::HAS_MANY, 'Orders', 'agreement_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'client_id' => null,
			'number' => Yii::t('app', 'Number'),
			'date' => Yii::t('app', 'Date'),
			'name' => Yii::t('app', 'Name'),
			'delete' => Yii::t('app', 'Delete'),
			'client' => null,
			'orders' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('client_id', $this->client_id);
		$criteria->compare('number', $this->number, true);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('delete', $this->delete);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}